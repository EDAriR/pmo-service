
package com.syntrontech.pmo.pmo.member;

import java.util.concurrent.Future;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MemberSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MemberSoap {

    /**
     * 
     * @param registerData
     * @param id
     * @param pwd
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RegisterUserWithDetails", action = "http://tempuri.org/RegisterUserWithDetails")
    @WebResult(name = "RegisterUserWithDetailsResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "RegisterUserWithDetails", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserWithDetails")
    @ResponseWrapper(localName = "RegisterUserWithDetailsResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserWithDetailsResponse")
    public String registerUserWithDetails(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "RegisterData", targetNamespace = "http://tempuri.org/")
                    String registerData);
    
    @WebMethod(operationName = "RegisterUserWithDetails", action = "http://tempuri.org/RegisterUserWithDetails")
    @RequestWrapper(localName = "RegisterUserWithDetails", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserWithDetails")
    @ResponseWrapper(localName = "RegisterUserWithDetailsResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserWithDetailsResponse")
    public Future<?> registerUserWithDetails(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "RegisterData", targetNamespace = "http://tempuri.org/")
                    String registerData,
            AsyncHandler<RegisterUserWithDetailsResponse> handler);

    /**
     * 
     * @param userData
     * @param id
     * @param pwd
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RegisterUserByVendor", action = "http://tempuri.org/RegisterUserByVendor")
    @WebResult(name = "RegisterUserByVendorResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "RegisterUserByVendor", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserByVendor")
    @ResponseWrapper(localName = "RegisterUserByVendorResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserByVendorResponse")
    public String registerUserByVendor(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "UserData", targetNamespace = "http://tempuri.org/")
                    String userData);
    
    @WebMethod(operationName = "RegisterUserByVendor", action = "http://tempuri.org/RegisterUserByVendor")
    @RequestWrapper(localName = "RegisterUserByVendor", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserByVendor")
    @ResponseWrapper(localName = "RegisterUserByVendorResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.RegisterUserByVendorResponse")
    public Future<?> registerUserByVendor(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "UserData", targetNamespace = "http://tempuri.org/")
                    String userData,
            AsyncHandler<RegisterUserByVendorResponse> handler);
    
    /**
     * 
     * @param userData
     * @param id
     * @param pwd
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UploadUserData", action = "http://tempuri.org/UploadUserData")
    @WebResult(name = "UploadUserDataResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "UploadUserData", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.UploadUserData")
    @ResponseWrapper(localName = "UploadUserDataResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.UploadUserDataResponse")
    public String uploadUserData(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "UserData", targetNamespace = "http://tempuri.org/")
                    String userData);
    
    @WebMethod(operationName = "UploadUserData", action = "http://tempuri.org/UploadUserData")
    @RequestWrapper(localName = "UploadUserData", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.UploadUserData")
    @ResponseWrapper(localName = "UploadUserDataResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.UploadUserDataResponse")
    public Future<?> uploadUserData(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "UserData", targetNamespace = "http://tempuri.org/")
                    String userData,
            AsyncHandler<UploadUserDataResponse> handler);
    

    /**
     * 
     * @param endDate
     * @param id
     * @param pwd
     * @param startDate
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetUserDataByVendor", action = "http://tempuri.org/GetUserDataByVendor")
    @WebResult(name = "GetUserDataByVendorResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetUserDataByVendor", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.GetUserDataByVendor")
    @ResponseWrapper(localName = "GetUserDataByVendorResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.GetUserDataByVendorResponse")
    public String getUserDataByVendor(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "StartDate", targetNamespace = "http://tempuri.org/")
                    String startDate,
            @WebParam(name = "EndDate", targetNamespace = "http://tempuri.org/")
                    String endDate);
    
    @WebMethod(operationName = "GetUserDataByVendor", action = "http://tempuri.org/GetUserDataByVendor")
    @RequestWrapper(localName = "GetUserDataByVendor", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.GetUserDataByVendor")
    @ResponseWrapper(localName = "GetUserDataByVendorResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.GetUserDataByVendorResponse")
    public Future<?> getUserDataByVendor(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            @WebParam(name = "StartDate", targetNamespace = "http://tempuri.org/")
                    String startDate,
            @WebParam(name = "EndDate", targetNamespace = "http://tempuri.org/")
                    String endDate,
            AsyncHandler<GetUserDataByVendorResponse> handler);

    /**
     * 
     * @param id
     * @param pwd
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ValidateUser", action = "http://tempuri.org/ValidateUser")
    @WebResult(name = "ValidateUserResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ValidateUser", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ValidateUser")
    @ResponseWrapper(localName = "ValidateUserResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ValidateUserResponse")
    public String validateUser(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd);
    
    @WebMethod(operationName = "ValidateUser", action = "http://tempuri.org/ValidateUser")
    @RequestWrapper(localName = "ValidateUser", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ValidateUser")
    @ResponseWrapper(localName = "ValidateUserResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ValidateUserResponse")
    public Future<?> validateUser(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "Pwd", targetNamespace = "http://tempuri.org/")
                    String pwd,
            AsyncHandler<ValidateUserResponse> handler);

    /**
     * 
     * @param newPwd
     * @param id
     * @param oldPwd
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ChangePassword", action = "http://tempuri.org/ChangePassword")
    @WebResult(name = "ChangePasswordResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ChangePassword", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ChangePassword")
    @ResponseWrapper(localName = "ChangePasswordResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ChangePasswordResponse")
    public String changePassword(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "OldPwd", targetNamespace = "http://tempuri.org/")
                    String oldPwd,
            @WebParam(name = "NewPwd", targetNamespace = "http://tempuri.org/")
                    String newPwd);
    
    @WebMethod(operationName = "ChangePassword", action = "http://tempuri.org/ChangePassword")
    @RequestWrapper(localName = "ChangePassword", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ChangePassword")
    @ResponseWrapper(localName = "ChangePasswordResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ChangePasswordResponse")
    public Future<?> changePassword(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            @WebParam(name = "OldPwd", targetNamespace = "http://tempuri.org/")
                    String oldPwd,
            @WebParam(name = "NewPwd", targetNamespace = "http://tempuri.org/")
                    String newPwd,
            AsyncHandler<ChangePasswordResponse> handler);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ResetPassword", action = "http://tempuri.org/ResetPassword")
    @WebResult(name = "ResetPasswordResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ResetPassword", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ResetPassword")
    @ResponseWrapper(localName = "ResetPasswordResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ResetPasswordResponse")
    public String resetPassword(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id);
    
    @WebMethod(operationName = "ResetPassword", action = "http://tempuri.org/ResetPassword")
    @RequestWrapper(localName = "ResetPassword", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ResetPassword")
    @ResponseWrapper(localName = "ResetPasswordResponse", targetNamespace = "http://tempuri.org/", className = "com.syntrontech.syncare.external.pmo.member.ResetPasswordResponse")
    public Future<?> resetPassword(
            @WebParam(name = "ID", targetNamespace = "http://tempuri.org/")
                    String id,
            AsyncHandler<ResetPasswordResponse> handler);

}
